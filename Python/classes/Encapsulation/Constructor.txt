Constructor:(__init__)
======================

class sample:
    def __init__(self):  # constructor
        print("constructor of sample class")
        self.x = 10
        self.y = 20

    def display(self):
        print("method of sample class")
        print(self.x)
        print(self.y)
# End of the class

s1 = sample() # whenever object created, immidiately constructor gets executed automatically.
print(s1)
print(s1.x)
print(s1.y)

s1.display() # method called for multiple times
s1.display()

print("\n\n")

s2=sample() # once again object creating and constructor executed again automatically.
print(s2)
print(s2.x)
print(s2.y)
s2.display()



===============================

# Modifying NSVs

class sample:
    def __init__(self):
        self.x = 10
        self.y = 20
    def m1(self):
        self.x = self.x+30
        self.y = self.y+40
        print(self.x)
        print(self.y)

# end of the class

s1 = sample() # obj creating and constructor executed automatically

print(s1.x)
print(s1.y)

s1.m1()

s2 = sample()
print(s2.x)
print(s2.y)

s2.m1()

